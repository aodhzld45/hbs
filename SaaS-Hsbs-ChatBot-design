# üß© HSBS AI Chatbot CMS ‚Äî Database Design Overview

> **Purpose:**  
> To define the full data model structure for the HSBS AI Chatbot CMS service ‚Äî  
> enabling multi-tenant chatbot management, widget customization, prompt control, and usage tracking.  
>  
> All tables inherit common audit fields from `AuditBase`:
> ```java
> use_tf, del_tf, reg_adm, reg_date, up_adm, up_date, del_adm, del_date
> ```

---

## üß± 1Ô∏è‚É£ MVP (Minimum Viable Product) ‚Äî **5 Tables**

> Covers the **entire commercial flow**:  
> siteKey issuance ‚Üí widget setup ‚Üí prompt application ‚Üí request quota & usage logging.

| Table | Purpose | Key Columns / Notes |
|--------|----------|--------------------|
| **`ai_site_key`** | External site identification and domain whitelist | site_key, site_name, allowed_domains(JSON), plan_code, status, FK(widget_config, prompt_profile) |
| **`ai_widget_config`** | Chat widget branding & layout options | theme(light/dark), bubble_icon_url, welcome_message, color_primary, position, radius, font, etc. |
| **`ai_prompt_profile`** | System & guardrail prompt configuration | profile_name, system_prompt, temperature, max_tokens, use_for(site/chat/summary) |
| **`ai_usage_log`** | Records every AI completion request | site_key_id(FK), model, tokens(in/out/total), latency_ms, cost_krw, ip, user_agent, status |
| **`ai_quota_daily`** | Daily usage counter per siteKey | site_key_id(FK), date, used_count, quota_limit, overflow_flag |

‚úÖ **Outcome:**  
- Enables full SaaS functionality from registration ‚Üí configuration ‚Üí quota management.  
- All tables inherit from `AuditBase`.

---

## ‚öôÔ∏è 2Ô∏è‚É£ Standard (Operational Enhancement) ‚Äî **+3 ~ 4 Tables**  
> Expands CMS-level functionality for feedback, sessions, and cost tracking.

| Table | Purpose | Key Columns / Notes |
|--------|----------|--------------------|
| **`ai_feedback`** *(optional)* | Captures user feedback (üëç/üëé, rating, comment) per response | usage_log_id(FK), rating(1~5), comment, user_session_key |
| **`ai_chat_session`** *(optional)* | Maintains conversation context and session key | site_key_id(FK), session_key(UUID), summary_text, last_prompt_at |
| **`ai_model_price`** *(optional)* | Manages OpenAI model cost configuration | model_name, input_price_per_1k, output_price_per_1k, currency, effective_date |
| **`ai_webhook`** *(optional)* | Registers webhook URLs for specific events | site_key_id(FK), event_type(limit_reached,error,feedback), callback_url, enabled |

‚úÖ **Outcome:**  
- Supports richer customer feedback and more stable operations.  
- Enables per-model cost tracking and external notification integration.

---

## üìä 3Ô∏è‚É£ Extended (Analytics / Audit Layer) ‚Äî **+2 ~ 3 Tables**  
> Adds long-term data aggregation and change tracking for analytics dashboards.

| Table | Purpose | Key Columns / Notes |
|--------|----------|--------------------|
| **`ai_error_log`** | Detailed error tracking for debugging and QA | site_key_id(FK), status_code, error_message, trace_id, occurred_at |
| **`ai_usage_daily_summary`** | Daily aggregated usage data | site_key_id(FK), date, total_calls, total_tokens, total_cost_krw |
| **`ai_prompt_history`** | Version history of prompt templates | prompt_profile_id(FK), version, content, updated_by, updated_at |

‚úÖ **Outcome:**  
- Improves dashboard performance and enables usage trend analysis.  
- Allows prompt version control and rollback (A/B testing, audits).

---

## üß© 4Ô∏è‚É£ Summary ‚Äî Table Count by Phase

| Phase | Tables | Purpose | Total |
|--------|---------|----------|--------|
| **Phase 1 (MVP)** | ai_site_key, ai_widget_config, ai_prompt_profile, ai_usage_log, ai_quota_daily | Core SaaS flow | **5** |
| **Phase 2 (Standard)** | + ai_feedback, ai_chat_session, ai_model_price, ai_webhook | Operational enhancement | **8~9** |
| **Phase 3 (Extended)** | + ai_error_log, ai_usage_daily_summary, ai_prompt_history | Analytics & audit layer | **10~12** |

---

## üß† Entity Inheritance Structure

